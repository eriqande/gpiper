% Generated by roxygen2 (4.0.1): do not edit by hand
\name{gsi.a.SelfAssign}
\alias{gsi.a.SelfAssign}
\title{run  gsi_sim self-assignment exercises using different sets of loci}
\usage{
gsi.a.SelfAssign(B, L = NULL, pops.f, dir.to.use = NULL)
}
\arguments{
\item{B}{a genetic baseline in \code{\link{gPipe.data.frame}} format}

\item{L}{a list of vectors of names of loci that are to be used.  The name of each locus
to be used should appear just once.  Obviously these names must correspond to locus
   names in the data frame B.  Note that you don't add the ".1"s to the names of the loci.
   If L is NULL (the default) then it is assumed that B contains only genotype data and the
   names of the loci are inferred from that.}

\item{pops.f}{a factor vector of populations each individual in B shall belong to.  levels of the
factor should be in the order that these should appear in.  pops.f must have length
equal to the number of rows of B}

\item{dir.to.use}{the directory to do the gsi_sim stuff in.  By default it is the current
directory, but you could use a tempfile() if you wanted to.}
}
\description{
given the baseline in the data frame B which is in \code{\link{gPipe.data.frame}} format
and a list of one or more sets of loci to use, this function computes self
assignments of the fish in the baseline for each set of loci.  Some day I will
figure out how to parallelize this with mclapply, but for now I just use lapply---there
seemed to be some interaction between system2 and mclapply, or something...
}

